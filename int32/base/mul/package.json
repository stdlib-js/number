{
  "name": "@stdlib/number/int32/base/mul",
  "version": "0.0.0",
  "description": "Perform C-like multiplication of two signed 32-bit integers.",
  "license": "Apache-2.0",
  "author": {
    "name": "The Stdlib Authors",
    "url": "https://github.com/stdlib-js/stdlib/graphs/contributors"
  },
  "contributors": [
    {
      "name": "The Stdlib Authors",
      "url": "https://github.com/stdlib-js/stdlib/graphs/contributors"
    }
  ],
  "main": "./lib",
  "directories": {
    "benchmark": "./benchmark",
    "doc": "./docs",
    "example": "./examples",
    "lib": "./lib",
    "test": "./test"
  },
  "types": "./docs/types",
  "scripts": {},
  "homepage": "https://github.com/stdlib-js/stdlib",
  "repository": {
    "type": "git",
    "url": "git://github.com/stdlib-js/stdlib.git"
  },
  "bugs": {
    "url": "https://github.com/stdlib-js/stdlib/issues"
  },
  "dependencies": {},
  "devDependencies": {},
  "engines": {
    "node": ">=0.10.0",
    "npm": ">2.7.0"
  },
  "os": [
    "aix",
    "darwin",
    "freebsd",
    "linux",
    "macos",
    "openbsd",
    "sunos",
    "win32",
    "windows"
  ],
  "keywords": [
    "stdlib",
    "stdmath",
    "mathematics",
    "math",
    "math.imul",
    "imul",
    "multiplication",
    "multiply",
    "mult",
    "integer",
    "int",
    "int32",
    "32-bit",
    "32bit",
    "long",
    "c",
    "emulate",
    "emulation"
  ],
  "__stdlib__": {
    "scaffold": {
      "$schema": "math/base@v1.0",
      "base_alias": "mul",
      "alias": "mul",
      "pkg_desc": "perform multiplication",
      "desc": "performs multiplication",
      "short_desc": "multiplication",
      "parameters": [
        {
          "name": "x",
          "desc": "first input value",
          "type": {
            "javascript": "number",
            "jsdoc": "integer",
            "c": "int32_t",
            "dtype": "int32"
          },
          "domain": [
            {
              "min": "-infinity",
              "max": "infinity"
            }
          ],
          "rand": {
            "prng": "random/base/discrete-uniform",
            "parameters": [
              0,
              10
            ]
          },
          "example_values": [
            1,
            27,
            0,
            10,
            9,
            8,
            1,
            125,
            20,
            11,
            12,
            3,
            2,
            15,
            16,
            17,
            125,
            19,
            101,
            21
          ]
        },
        {
          "name": "y",
          "desc": "second input value",
          "type": {
            "javascript": "number",
            "jsdoc": "integer",
            "c": "int32_t",
            "dtype": "int32"
          },
          "domain": [
            {
              "min": "-infinity",
              "max": "infinity"
            }
          ],
          "rand": {
            "prng": "random/base/discrete-uniform",
            "parameters": [
              0,
              10
            ]
          },
          "example_values": [
            51,
            2,
            10,
            14,
            90,
            88,
            1,
            12,
            120,
            71,
            62,
            31,
            2,
            45,
            26,
            37,
            25,
            59,
            11,
            41
          ]
        }
      ],
      "output_policy": "same",
      "returns": {
        "desc": "result",
        "type": {
          "javascript": "number",
          "jsdoc": "integer",
          "c": "int32_t",
          "dtype": "int32"
        }
      },
      "keywords": [
        "multiplication",
        "multiply",
        "product"
      ],
      "extra_keywords": []
    }
  }
}
